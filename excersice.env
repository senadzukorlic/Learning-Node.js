Zadatak 1: API za Upravljanje Korisnicima
Cilj: Kreiraj jednostavan CRUD API za upravljanje korisnicima koristeći Express.js.

Uputstvo:

Napravi novu Express aplikaciju.
Kreiraj rute za korisnike:
GET /users – Prikaži sve korisnike.
POST /users – Dodaj novog korisnika (koristi JSON body sa podacima poput imena, emaila).
PUT /users/:id – Izmeni postojeći korisnički zapis po ID-ju.
DELETE /users/:id – Obriši korisnika po ID-ju.
Koristi običan JavaScript niz (array) za čuvanje korisnika (ne koristi bazu podataka u ovoj vežbi).
Koristi body-parser middleware za parsiranje dolaznih podataka.
Ekstra: Dodaj validaciju za polja korisnika (npr. email mora biti ispravan).

Zadatak 2: API za Upravljanje Proizvodima
Cilj: Kreiraj API za proizvode gde korisnici mogu dodavati, pregledati, ažurirati i brisati proizvode.

Uputstvo:

Definiši model proizvoda sa sledećim poljima: id, name, price, description, category.
Implementiraj sledeće rute:
GET /products – Lista svih proizvoda.
GET /products/:id – Detaljan prikaz proizvoda po ID-ju.
POST /products – Kreiraj novi proizvod.
PUT /products/:id – Ažuriraj proizvod po ID-ju.
DELETE /products/:id – Obriši proizvod po ID-ju.
Koristi Sequelize ORM i poveži se na MySQL bazu podataka (u vezi s ovim si već radio).
Ekstra: Implementiraj opciju da pretraga proizvoda po category bude moguća koristeći query parametar (npr. GET /products?category=electronics).

Zadatak 3: Middleware i Error Handling
Cilj: Razvij funkcionalnost za logovanje i greške u aplikaciji.

Uputstvo:

Kreiraj middleware funkciju koja loguje sve dolazne zahteve (method, url, timestamp).
Dodaj grešku za sve zahteve ka nepostojećim rutama (404 error).
Kreiraj globalni middleware za hvatanje grešaka (error-handling middleware).
Ekstra: Poveži se sa eksternom servisom za logovanje grešaka, poput Sentry ili Loggly, za praćenje grešaka u realnom vremenu.

Zadatak 4: Autentifikacija i Autorizacija
Cilj: Implementiraj osnovni sistem za prijavu i autorizaciju korisnika.

Uputstvo:

Napravi rute za:
POST /login – Prijava korisnika (koristi jednostavne podatke, poput email-a i lozinke).
POST /signup – Registracija novog korisnika.
Implementiraj autorizaciju koristeći JSON Web Tokens (JWT):
Zaštiti određene rute da im mogu pristupiti samo prijavljeni korisnici.
Generiši i validiraj JWT tokene.
Dodaj middleware koji proverava da li je korisnik autentifikovan pre nego što mu dozvoli pristup određenim rutama.
Ekstra: Napravi middleware koji proverava ulogu korisnika (admin/user) i dozvoljava specifične akcije na osnovu uloge.

Zadatak 5: Paginate i Filtriranje
Cilj: Dodaj paginaciju i filtriranje podataka u postojeći API.

Uputstvo:

Dodaj funkcionalnost za paginaciju u rute za prikaz proizvoda.
Omogući filtriranje po ceni proizvoda (npr. GET /products?minPrice=10&maxPrice=100).
Dodaj opciju sortiranja proizvoda po imenu ili ceni.
Ako ti neki od zadataka bude previše lak ili težak, slobodno javi, pa ću prilagoditi vežbe. Ovako ćeš moći da primeniš različite koncepte, od CRUD operacija, middleware-a, pa do JWT autentifikacije!